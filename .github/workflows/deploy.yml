name: Marswide Backend CI/CD

on:
    push:
      branches: [ master ]
    pull_request:
      branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Clone repo
      uses: actions/checkout@v3

    - name: Setup python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version
    
    - name: Create .env file
      run: |
        echo "${{ secrets.ENV_FILE }}" > .env
        
    - name: Django settings and test
      env:
        DJANGO_SETTINGS_MODULE: core.settings
        DATABASE_URL: postgres://postgres:mars@db:5432/marswidedb_test
      run: |
        docker-compose down --remove-orphans && docker-compose -f docker-compose.prod.yml up --build -d
        docker-compose exec web python manage.py test

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Connect to server with SSH and deploy it
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd /home/admin/marswide/marswide_backend
          git pull origin master
          docker-compose down --remove-orphans && docker-compose -f docker-compose.prod.yml up --build -d
