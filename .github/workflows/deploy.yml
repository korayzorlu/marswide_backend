name: Marswide Backend CI/CD

on:
    push:
      branches: [ master ]
    pull_request:
      branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Clone repo
      uses: actions/checkout@v3

    - name: Setup python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install ghostscript fonts
      run: |
        sudo apt-get update
        sudo apt-get install -y gsfonts fonts-urw-base35
    
    -
        name: Set up Docker
        uses: docker/setup-docker-action@v4

    -
        name: Set up Docker Compose
        uses: docker/setup-compose-action@v1
    
    - name: Create .env file
      run: |
        cat <<EOF > .env
        ${{ secrets.ENV_FILE }}
        EOF
    
    - name: Build and Push Docker image
      run: |
        docker network create marswide_network
        docker-compose down --remove-orphans
        docker-compose -f docker-compose.prod.yml up --build -d

    - name: Create DB user and database if not exists
      run: |
        docker-compose exec db psql -U postgres -c "
            CREATE USER mars WITH PASSWORD '9527';
            CREATE DATABASE marswidedb;
            GRANT ALL PRIVILEGES ON DATABASE marswidedb TO mars;
            ALTER DATABASE marswidedb OWNER TO mars;
        "

    
    - name: Wait for PostgreSQL
      run: |
        until docker-compose exec db pg_isready -U postgres; do
        echo "Waiting for PostgreSQL to be ready..."
        sleep 2
        done

    - name: Django settings and test
      run: |
        docker-compose exec web python manage.py migrate

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Connect to server with SSH and deploy it
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd /home/admin/marswide/marswide_backend
          git pull origin master
          docker-compose down --remove-orphans && docker-compose -f docker-compose.prod.yml up --build -d
          docker-compose exec web python manage.py migrate
